@page
@model VehicleDetailsModel
@{
    ViewData["Title"] = "Vehicle Details";
}

<!-- Google Maps için stil -->
<style>
    #map {
        height: 100%;
        width: 100%;
        min-height: 500px;
    }
@@keyframes flash {
    0% { background-color: #d1fae5; } /* Açık yeşil */
    50% { background-color: transparent; }
    100% { background-color: #d1fae5; }
}

.flash {
    animation: flash 1s ease-in-out;
}

/* Satır hover efekti */
tbody tr:hover {
    background-color: #f9fafc; /* Açık yeşil */
}
</style>

<div class="flex h-[calc(100vh-64px)]">
    <partial name="_NavigationPartial" />



    <div class="flex flex-1">
        <!-- Sol sidebar - Araç listesi -->
        <div class="w-[300px] bg-white border-r flex flex-col">
            <div class="p-4 border-b">
                <h2 class="text-lg font-medium mb-4">VEHICLES</h2>
                <div class="flex gap-2">
                    <div class="flex-1 relative">
                        <input type="text" placeholder="Search" class="w-full pl-3 pr-10 py-2 border rounded-lg">
                        <button class="absolute right-3 top-1/2 transform -translate-y-1/2">
                            <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                            </svg>
                        </button>
                    </div>
                    <button class="p-2 border rounded-lg">
                        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 12h16M4 18h16" />
                        </svg>
                    </button>
                    <button class="p-2 border rounded-lg">
                        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 4v1m6 11h2m-2 0h-2m2 0v-2m0 2v2M6 7h2m-2 0H4m2 0v2M4 19h2m-2 0v-2m0 2v2m2-2H4m0 0h2" />
                        </svg>
                    </button>
                </div>
            </div>
            <div class="flex-1 overflow-auto p-4">
                @if (Model.Vehicles == null || !Model.Vehicles.Any())
                {
                    <div class="flex flex-col items-center justify-center h-full text-gray-500">
                        <svg class="w-16 h-16 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                  d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M12 14h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <p class="text-lg font-medium">Bu organizasyona ait araç bulunamadı</p>
                    </div>
                }
                else
                {
                    @foreach (var vehicle in Model.Vehicles)
                    {
                        <div class="flex items-center gap-3 @(vehicle.Id == Model.VehicleDetails?.Id ? "bg-blue-50" : "hover:bg-gray-50") p-3 rounded-lg cursor-pointer mb-2"
                             onclick="focusVehicle(@vehicle.Id)" data-vehicle-id="@vehicle.Id">
                            <div class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                                <img src="/images/bus-@(vehicle.IsActive ? "active" : "inactive").png" 
                                     class="w-5 h-5" alt="Bus Icon">
                            </div>
                            <span class="font-medium">@vehicle.DisplayName</span>
                        </div>
                    }
                }
            </div>
            <div class="p-4 border-t">
                <a href="/Dashboard" class="flex items-center gap-2 text-blue-600">
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                    </svg>
                    Go back to fleets
                </a>
            </div>
        </div>


        <div class="flex-1 flex flex-col bg-gray-100">
            <!-- Metrikler -->
            <div class="bg-white p-4 m-4 rounded-lg shadow-lg">
                <!-- Butonlar ve Bağlantı Durumu -->
                <div class="flex flex-wrap items-center justify-between mb-6">
                    <h2 class="text-lg font-medium text-gray-700">Metrics</h2>
                    <div class="flex flex-col sm:flex-row items-center justify-center gap-3">
                        <!-- This is the connectionState div -->
                        <div id="connectionState"
                            class="px-3 py-1 rounded-full text-white text-xs bg-yellow-500 w-24 flex items-center justify-center gap-2 mb-3 sm:mb-0">
                            <span class="w-1.5 h-1.5 rounded-full bg-white animate-pulse"></span>
                            <span class="flex-1 text-center">Bağlanıyor...</span>
                        </div>
                        <!-- These are the buttons -->
                        <div class="flex gap-2">
                            <button onclick="setView('map')" id="mapButton"
                                class="px-4 py-2 rounded-lg bg-blue-600 text-white">
                                Map
                            </button>
                            <button onclick="setView('signals')" id="signalsButton"
                                class="px-4 py-2 rounded-lg bg-gray-100 text-gray-600 hover:bg-gray-200">
                                Signals
                            </button>
                        </div>
                    </div>
                </div>


                <!-- Metrikler -->
                <div class="flex flex-wrap justify-center gap-8" id="metricsContainer">
                    <div class="flex flex-col items-center">
                        <div class="metric-circle relative">
                            <svg width="80" height="80">
                                <circle class="background" cx="40" cy="40" r="36" fill="none" stroke="#e5e7eb"
                                    stroke-width="8"></circle>
                                <circle class="progress" cx="40" cy="40" r="36" fill="none" stroke="#3b82f6"
                                    stroke-width="8" stroke-linecap="round" stroke-dasharray="226.1946710584651"
                                    stroke-dashoffset="226.195"
                                    style="transition: stroke-dashoffset 0.5s ease-in-out; stroke-dashoffset: 226.195;">
                                </circle>
                            </svg>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <div class="text-lg font-semibold">0</div>
                            </div>
                        </div>
                        <div class="mt-2 text-sm font-medium text-center">Speed (km/h)</div>
                    </div>

                    <div class="flex flex-col items-center">
                        <div class="metric-circle relative">
                            <svg width="80" height="80">
                                <circle class="background" cx="40" cy="40" r="36" fill="none" stroke="#e5e7eb"
                                    stroke-width="8"></circle>
                                <circle class="progress" cx="40" cy="40" r="36" fill="none" stroke="#3b82f6"
                                    stroke-width="8" stroke-linecap="round" stroke-dasharray="226.1946710584651"
                                    stroke-dashoffset="226.195"
                                    style="transition: stroke-dashoffset 0.5s ease-in-out; stroke-dashoffset: 226.195;">
                                </circle>
                            </svg>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <div class="text-lg font-semibold">0</div>
                            </div>
                        </div>
                        <div class="mt-2 text-sm font-medium text-center">Acceleration (%)</div>
                    </div>


                    <div class="flex flex-col items-center">
                        <div class="metric-circle relative">
                            <svg width="80" height="80">
                                <circle class="background" cx="40" cy="40" r="36" fill="none" stroke="#e5e7eb"
                                    stroke-width="8"></circle>
                                <circle class="progress" cx="40" cy="40" r="36" fill="none" stroke="#3b82f6"
                                    stroke-width="8" stroke-linecap="round" stroke-dasharray="226.1946710584651"
                                    stroke-dashoffset="226.195"
                                    style="transition: stroke-dashoffset 0.5s ease-in-out; stroke-dashoffset: 226.195;">
                                </circle>
                            </svg>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <div class="text-lg font-semibold">0</div>
                            </div>
                        </div>
                        <div class="mt-2 text-sm font-medium text-center">Motor RPM</div>
                    </div>


                    <div class="flex flex-col items-center">
                        <div class="metric-circle relative">
                            <svg width="80" height="80">
                                <circle class="background" cx="40" cy="40" r="36" fill="none" stroke="#e5e7eb"
                                    stroke-width="8"></circle>
                                <circle class="progress" cx="40" cy="40" r="36" fill="none" stroke="#3b82f6"
                                    stroke-width="8" stroke-linecap="round" stroke-dasharray="226.1946710584651"
                                    stroke-dashoffset="226.195"
                                    style="transition: stroke-dashoffset 0.5s ease-in-out; stroke-dashoffset: 226.195;">
                                </circle>
                            </svg>
                            <div class="absolute inset-0 flex items-center justify-center">
                                <div class="text-lg font-semibold">0</div>
                            </div>
                        </div>
                        <div class="mt-2 text-sm font-medium text-center">Battery (%)</div>
                    </div>


                </div>
            </div>

            <!-- Harita/Sinyaller -->
            <div class="flex-1 p-4 pb-0">
                <div id="mapView" class="h-full rounded-lg overflow-hidden shadow-lg">
                    <div id="map" class="h-full w-full"></div>
                </div>
                <div id="signalsView" class="h-full bg-white rounded-lg p-4 shadow-lg hidden">
                    <!-- Sinyaller -->
                    <div class="flex items-center mb-4">
                        <input type="text" placeholder="Search" class="w-64 pl-3 pr-10 py-2 border rounded-lg">
                        <div class="ml-2">
                            <input type="checkbox" id="groupByCategory" class="mr-2">
                            <label for="groupByCategory" class="text-sm text-gray-600">
                                group by category
                            </label>
                        </div>
                    </div>

                    <div class="overflow-x-auto">
                        <table class="min-w-full">
                            <thead>
                                <tr class="bg-gray-50">
                                    <th class="px-4 py-2 text-left text-sm font-medium text-gray-600">Metric</th>
                                    <th class="px-4 py-2 text-left text-sm font-medium text-gray-600">Value</th>
                                    <th class="px-4 py-2 text-left text-sm font-medium text-gray-600">Timestamp</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-100" id="metricsTableBody">
                                <!-- Metrik verileri buraya eklenecek -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <!-- Temel kütüphaneler -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <!-- Veri tanımlamaları -->
    <script>
        var selectedVehicle = @(Model.VehicleDetails != null ? 
            Html.Raw(Json.Serialize(Model.VehicleDetails)) : 
            "null");
        var vehicles = @Html.Raw(Json.Serialize(Model.Vehicles));
    </script>
    
    <!-- Ana uygulama script'i -->
    <script src="~/js/vehicleDetails.js"></script>
}

</html>
